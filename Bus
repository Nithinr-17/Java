package Travel;

public class Bus {
	private int bno;
	private boolean ac;
	private int cap;
	Bus(int a,boolean b,int c){
		this.bno=a;
		this.ac=b;
		this.cap=c;
	}
	public int get_bno() {
		return bno;
	}
	public boolean get_ac() {
		return ac;
	}
	public int get_cap() {
		return cap;
	}
	public void display() {
		System.out.println("--------------------------------");
		System.out.println("Bus no: "+bno);
		System.out.println("AC available ? "+ac);
		System.out.println("Capacity: "+cap);
	}
}
package Travel;
import java.util.*;
public class Master {
public static void main(String[] args) {
	ArrayList<Bus> buses = new ArrayList<>();
	ArrayList<Booking> bookings = new ArrayList<>();
	buses.add(new Bus(1,true,50));
	buses.add(new Bus(2,true,55));
	buses.add(new Bus(3,true,2));
	for(Bus b :buses) {
		b.display();   
	}
	Scanner sc = new Scanner(System.in);
	int ch = 1;
	while(ch==1)
	{
		System.out.println("Enter 1 to book,2 to exit");
		ch = sc.nextInt();
		if(ch==1)
		{
			Booking book = new Booking(sc);
			
			if(book.isavailable(buses,bookings))
			{
				System.out.println("Ticket booked");
			    bookings.add(book);
			}
			else
			{
				System.out.println("No Tickets Avaliable");
			}
		}
	}
	sc.close();
}
}package Travel;
import java.util.*;
import java.text.SimpleDateFormat;
import java.text.ParseException;
public class Booking 
{
	String name;
	int busno;
	Date date;
	
	Booking(Scanner sc)
	{
		System.out.println("Name of the passanger:");
		name = sc.next();
		System.out.println("Bus no:");
		busno = sc.nextInt();
		System.out.println("Enter the date(dd-mm-yyyy):");
		String n = sc.next();
		SimpleDateFormat sdf = new SimpleDateFormat("dd-mm-yyyy");
		
		try
		{
			date=sdf.parse(n);
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}
		public boolean isavailable(ArrayList<Bus> buses,ArrayList<Booking> bookings) 
		{
			int booked =0;
			int capacity=0;
			for(Bus bb:buses)
			{
				if(bb.get_bno()==busno)
				{
					capacity = bb.get_cap();
				}
			}
			for(Booking aa : bookings)
			{
				if(aa.busno==busno && aa.date.equals(date))
				{
					booked++;
				}
			}
			return booked<capacity;
		}
}
